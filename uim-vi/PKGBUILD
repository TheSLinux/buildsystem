#!/bin/bash

# Maintainer: Anh K. Huynh <kyanh@theslinux.org>
# Original Maintainer: Gaetan Bisson <bisson@archlinux.org>
# Original Contributor: damir <damir@archlinux.org>

pkgdesc='Vietnamese input method library'
url='http://code.google.com/p/uim/'
license=('custom:BSD')
arch=('i686' 'x86_64')
depends=('libxft' 'libedit' 'm17n-lib' 'm17n-db-vi' 'uim-vi-xtelex')
makedepends=('intltool' 'gettext' 'qt4' 'gtk2' 'gtk3' 'm17n-db-vi')
optdepends=('qt4: immodule and helper applications'
            'gtk2: immodule and helper applications'
            'gtk3: immodules and helper applications')
options=('!libtool')

source=(
        "0001-Clean-up-some-non-vi-modules-language-supports.patch"
        "0002-Add-new-module-xtelex.patch"
        "0003-Add-new-module-xvni.patch"
        "0004-Should-use-.png-instead-of-.svg-for-vni.patch"
        "0005-IPA-support-xtelex-ipa-xvni-ipa.patch"
        "1001-config.-to-set-default-mode-for-generic-IM.patch"
        "2001-Hide-show-candidate-window-via-generic-option.patch"
        "2002-m17nlib-now-requires-generic-custom.patch"
        "3001-Remove-some-Japanese-supports-from-toolbar.menu.patch"
        "3002-Remove-state-icon-on-systray.patch"
        "http://uim.googlecode.com/files/uim-${pkgver}.tar.gz"
        "https://raw.github.com/TheSLinux-forks/myquartz-scim2uim/v1.1.0/bin/scim2uim.awk")

provides=('uim')
conflicts=('uim')
replaces=('uim')

install=install

build() {
  cd "${srcdir}/uim-${pkgver}"

  # NOTES: By using an old .awk script, we generate some empty source
  # NOTES: files that will help the build process to work. At the final
  # NOTES: step when the package is created, these files will be removed.
  # NOTES: This is because they are official supported on `uim-vi-xtelex`
  # NOTES: package.

  msg "Generating faked 'xtelex.scm'..."
  echo 'A A' | awk -f "${srcdir}/scim2uim.awk" -vim=telex \
    > "./scm/xtelex.scm"

  msg "Generating faked 'xvni.scm'..."
  echo 'A A' | awk -f "${srcdir}/scim2uim.awk" -vim=vni \
    > "./scm/xvni.scm"

  msg "Generating faked 'xtelex-ipa.scm'..."
  cat "./scm/xtelex.scm" \
    | sed -e 's/xtelex/xtelex-ipa/g' -e 's/Telex/Telex-IPA/g' \
    > "./scm/xtelex-ipa.scm"

  msg "Generating faked 'xvni-ipa.scm'..."
  cat "./scm/xvni.scm" \
    | sed -e 's/xvni/xvni-ipa/g' -e 's/VNI/VNI-IPA/g' \
    > "./scm/xvni-ipa.scm"

  for _file in x{telex,vni}{,-ipa}.{svg,png}; do
    touch "./pixmaps/${_file}"
  done

  for _f_patch in ${srcdir}/000[1-5]*.patch \
                  ${srcdir}/1001-*.patch \
                  ${srcdir}/200[1-2]-*.patch \
                  ${srcdir}/300[1-2]-*.patch \
  ; do
    patch -l -Np4 < "$_f_patch"
  done

  ./autogen.sh
  ./configure \
    --prefix=/usr \
    --libexecdir=/usr/lib/uim \
    --without-anthy \
    --with-qt4-immodule \
    --with-qt4 \
    --disable-gnome-applet \
    --disable-dict \
    --without-skk \
    --without-mana \
    --without-prime \
    --without-sj3 \
    --without-scim \
    --without-eb \
    --without-osx-dcs \
    --without-sqlite3

  make
}

package() {
  cd "${srcdir}/uim-${pkgver}"
  make DESTDIR="${pkgdir}" install
  rm "${pkgdir}"/usr/lib/libgcroots.a
  install -D -m644 COPYING "${pkgdir}/usr/share/licenses/uim/COPYING"

  # Remove temporary files. See the NOTES above.
  rm -f "${pkgdir}/usr/share/uim/"{xtelex,xvni}{,-ipa}.scm
  rm -f "${pkgdir}/usr/share/uim/pixmaps/"{xtelex,xvni}{,-ipa}.{svg,png}

  ln -s uim-pref-gtk "${pkgdir}/usr/bin/uim-setup"
  ln -s uim-toolbar-gtk-systray "${pkgdir}/usr/bin/uim-systray"
}

get_update() {
  local _url="https://github.com/uim/uim/tags"

  echo "${PACKAGE_BASE}:"

  lynx -dump \
    -connect_timeout="${CURL_TIMEOUT:-3}" \
    "$_url" 2>/dev/null \
  | grep -- "releases/tag/" \
  | head -1 \
  | awk '{print $NF}' \
  | while read _line; do
      _version="${_line##*/}"
      _version="${_version##*-}"
      if [[ "$_version" == "$PACKAGE_VERSION" ]]; then
        echo "  up-to-date: yes"
      else
        echo "$_version" | grep -qE '^([0-9]+\.){2}[0-9]+$'
        if [[ $? -eq 0 ]]; then
          echo "  update: ${_version}"
          echo "  update.link: ${_line}"
        else
          echo "  error: curl.format"
          return 1
        fi
      fi
    done

  [[ ${PIPESTATUS[0]} -eq 0 ]] \
  || { echo "  error: curl.error"; return 1; }
}
