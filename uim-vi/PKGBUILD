#!/bin/bash

# Maintainer: Anh K. Huynh <kyanh@theslinux.org>
# Original Maintainer: Gaetan Bisson <bisson@archlinux.org>
# Original Contributor: damir <damir@archlinux.org>

pkgdesc='Vietnamese input method library'
url='http://code.google.com/p/uim/'
license=('custom:BSD')
arch=('i686' 'x86_64')
depends=('libxft' 'libedit' 'm17n-lib' 'm17n-db-vi' 'uim-vi-xtelex')
makedepends=('intltool' 'gettext' 'qt4' 'gtk2' 'gtk3' 'm17n-db-vi')
optdepends=('qt4: immodule and helper applications'
            'gtk2: immodule and helper applications'
            'gtk3: immodules and helper applications')
options=('!libtool')

source=(
  "http://uim.googlecode.com/files/uim-${PACKAGE_VERSION}.tar.gz"
  "uim-vi-${PACKAGE_VERSION}.patch"::"https://github.com/TheSLinux-forks/uim/compare/uim-${PACKAGE_VERSION}...uim-vi-${PACKAGE_VERSION}.patch")

provides=('uim')
conflicts=('uim')
replaces=('uim')

install=install

build() {
  cd "${srcdir}/uim-${pkgver}"

  patch -l -Np1 < "${srcdir}/uim-vi-${PACKAGE_VERSION}.patch"

  ./autogen.sh
  ./configure \
    --prefix=/usr \
    --libexecdir=/usr/lib/uim \
    --without-anthy \
    --with-qt4-immodule \
    --with-qt4 \
    --disable-gnome-applet \
    --disable-dict \
    --without-skk \
    --without-mana \
    --without-prime \
    --without-sj3 \
    --without-scim \
    --without-eb \
    --without-osx-dcs \
    --without-sqlite3

  make
}

package() {
  cd "${srcdir}/uim-${pkgver}"
  make DESTDIR="${pkgdir}" install
  rm "${pkgdir}"/usr/lib/libgcroots.a
  install -D -m644 COPYING "${pkgdir}/usr/share/licenses/uim/COPYING"

  # Remove temporary files. See the NOTES above.
  rm -f "${pkgdir}/usr/share/uim/"{xtelex,xvni}{,-ipa}.scm
  rm -f "${pkgdir}/usr/share/uim/pixmaps/"{xtelex,xvni}{,-ipa}.{svg,png}

  ln -s uim-pref-gtk "${pkgdir}/usr/bin/uim-setup"
  ln -s uim-toolbar-gtk-systray "${pkgdir}/usr/bin/uim-systray"
}

get_update() {
  local _url="https://github.com/uim/uim/tags"

  echo "${PACKAGE_BASE}:"

  lynx -dump \
    -connect_timeout="${CURL_TIMEOUT:-3}" \
    "$_url" 2>/dev/null \
  | grep -- "releases/tag/" \
  | head -1 \
  | awk '{print $NF}' \
  | while read _line; do
      _version="${_line##*/}"
      _version="${_version##*-}"
      if [[ "$_version" == "$PACKAGE_VERSION" ]]; then
        echo "  up-to-date: yes"
      else
        echo "$_version" | grep -qE '^([0-9]+\.){2}[0-9]+$'
        if [[ $? -eq 0 ]]; then
          echo "  update: ${_version}"
          echo "  update.link: ${_line}"
        else
          echo "  error: curl.format"
          return 1
        fi
      fi
    done

  [[ ${PIPESTATUS[0]} -eq 0 ]] \
  || { echo "  error: curl.error"; return 1; }
}
