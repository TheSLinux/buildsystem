#!/bin/bash

# Maintainer: Anh K. Huynh <kyanh@theslinux.org>
# Original Maintainer: Gaetan Bisson <bisson@archlinux.org>
# Original Contributor: damir <damir@archlinux.org>

pkgdesc='Vietnamese input method library (based on uim)'
url='https://github.com/TheSLinux-forks/uim'
license=('custom:BSD')
arch=('i686' 'x86_64')
depends=('libxft' 'libedit' "${_FEATURE_LIB32:+lib32-}m17n-lib" 'm17n-db' 'uim-vi-xtelex')
makedepends=('intltool' 'gettext' "${_FEATURE_LIB32:+lib32-}qt4" 'gtk2' 'gtk3' 'm17n-db' "${_FEATURE_LIB32:+lib32-}m17n-lib")
optdepends=('qt4: immodule and helper applications'
            'gtk2: immodule and helper applications'
            'gtk3: immodules and helper applications')
options=('!libtool')

UIM_BASE_VERSION='uim-1.8.6'

_CONFIGURE_FLAGS=""
_WITH_CAND_WIN="1"

echo "${PACKAGE_FEATURE:-}" | grep -q "nocandwin" \
&& {
  pkgdesc="$pkgdesc [no candidate window]"
  _WITH_CAND_WIN=""
}

echo "${PACKAGE_FEATURE:-}" | grep -q "qt5" \
&& {
  _CONFIGURE_FLAGS="${_WITH_CAND_WIN:+--with-qt5 }--with-qt5-immodule"
  pkgdesc="$pkgdesc [with Qt5]"
  optdepends=("${optdepends[@]}" 'qt5: immodule and helper applications')
}

echo "${PACKAGE_FEATURE:-}" | grep -q "git" \
&& {
  _GIT_HASH="$(echo ${PACKAGE_FEATURE} | sed -e 's#.*git-\?\([0-9a-f]\+\).*#\1#g')"
  msg "Git commit detected: $_GIT_HASH"
}

source=(
  "https://uim.googlecode.com/files/${UIM_BASE_VERSION}.tar.gz"
  "uim-vi-${PACKAGE_VERSION}${_GIT_HASH:+-$_GIT_HASH}.tar.gz"::"https://github.com/TheSLinux-forks/uim/archive/uim-vi-${PACKAGE_VERSION}.tar.gz"
)

if [[ -z "$_FEATURE_LIB32" ]]; then
  provides=('uim')
  conflicts=('uim')
  replaces=('uim')
  install=install
else
  # FIXME: no-candwin
  # FIXME: no-qt5
  _WITH_CAND_WIN=""
  _CONFIGURE_FLAGS=" \
      $_CONFIGURE_FLAGS \
      --disable-kde-applet \
      --disable-pref \
      --disable-gnome-applet \
      --disable-gnome3-applet \
      --without-gtk2 \
      --without-gtk3
    "
fi

build() {
  cd "${srcdir}/uim-uim-vi-${PACKAGE_VERSION}"

  if [[ ! -L './sigscheme' ]]; then
    rm -rf './sigscheme/'
    ln -s "${srcdir}/${UIM_BASE_VERSION}/sigscheme/" './sigscheme'
  fi

  rsync -r \
    --include="*.svg" \
    --include="*.png" \
    --exclude="*" \
    "${srcdir}/${UIM_BASE_VERSION}/pixmaps/" ./pixmaps/

  echo > po/LINGUAS
  echo "${PACKAGE_FEATURE:-}" | grep -q "debug" \
  || {
    if [[ -f "./qt5/immodule/quimplatforminputcontext.cpp" ]]; then
      sed -i -e '/#define ENABLE_DEBUG/d' qt5/immodule/quimplatforminputcontext.cpp
    fi
  }

  if [[ -n "$_FEATURE_LIB32" ]]; then
    # FIXME: this won't work
    # export QTDIR=/usr/lib32/qt/

    # FIXME: Work-around while waiting for the official support
    # FIXME: from the `_utils` package. See also
    # FIXME: https://github.com/TheSLinux/buildsystem/commit/846b964978ad
    export CXX="$CXX -m32"
  fi
  ./autogen.sh
  ./configure \
    --prefix=/usr \
    --libdir="/usr/lib${_FEATURE_LIB32}" \
    --libexecdir=/usr/lib${_FEATURE_LIB32}/uim \
    --without-anthy \
    --with-qt4-immodule${_WITH_CAND_WIN:+ --with-qt4} \
    --disable-gnome-applet \
    --disable-dict \
    --without-skk \
    --without-mana \
    --without-prime \
    --without-sj3 \
    --without-scim \
    --without-eb \
    --without-osx-dcs \
    --without-sqlite3 \
    $_CONFIGURE_FLAGS

  make
}

package() {
  cd "${srcdir}/uim-uim-vi-${PACKAGE_VERSION}"

  make DESTDIR="${pkgdir}" install
  rm "${pkgdir}"/usr/lib/libgcroots.a || true
  install -D -m644 COPYING "${pkgdir}/usr/share/licenses/uim/COPYING"

  # Remove temporary files. See the NOTES above.
  rm -f "${pkgdir}/usr/share/uim/"{xtelex,xvni}{,-ipa}.scm
  rm -f "${pkgdir}/usr/share/uim/pixmaps/"{xtelex,xvni}{,-ipa}.{svg,png}

  ln -s uim-pref-gtk "${pkgdir}/usr/bin/uim-setup"
  ln -s uim-toolbar-gtk-systray "${pkgdir}/usr/bin/uim-systray"

  [[ -n "$_FEATURE_LIB32" ]] || return 0

  rm -rf \
    "${pkgdir}"/usr/bin/ \
    "${pkgdir}"/usr/share/ \
    "${pkgdir}"/usr/include/ \
    "${pkgdir}"/usr/lib32/gtk-2.0/ \
    "${pkgdir}"/usr/lib32/gtk-3.0/ \
    "${pkgdir}"/usr/lib32/qt/

  # Weird, but this is how `lib32-qt4` is done
  mv "${pkgdir}"/usr/lib/qt4 "${pkgdir}"/usr/lib32/qt
  rm -r "${pkgdir}"/usr/lib/
}

get_update() {
  local _url="https://github.com/uim/uim/tags"

  echo "${PACKAGE_BASE}:"

  lynx -dump \
    -connect_timeout="${CURL_TIMEOUT:-3}" \
    "$_url" 2>/dev/null \
  | grep -- "releases/tag/" \
  | head -1 \
  | awk '{print $NF}' \
  | while read _line; do
      _version="${_line##*/}"
      _version="${_version##*-}"
      if [[ "$_version" == "$PACKAGE_VERSION" ]]; then
        echo "  up-to-date: yes"
      else
        echo "$_version" | grep -qE '^([0-9]+\.){2}[0-9]+$'
        if [[ $? -eq 0 ]]; then
          echo "  update: ${_version}"
          echo "  update.link: ${_line}"
        else
          echo "  error: curl.format"
          return 1
        fi
      fi
    done

  [[ ${PIPESTATUS[0]} -eq 0 ]] \
  || { echo "  error: curl.error"; return 1; }
}
